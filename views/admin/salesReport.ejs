<%- include('partials/header.ejs',{tab:"salesReport"}) %>

<style>
    table {
        width: 100%;
        border-collapse: collapse;
    }

    th,
    td {
        border: 1px solid #dddddd;
        text-align: left;
        padding: 8px;
    }

    th {
        background-color: #f2f2f2;
        text-align: right;
    }

    #salesTable th {
        text-align: center;
    }

    th {
        text-align: center;
    }
</style>


<div class="card mb-4">
    <header class="card-header">
        <div style="margin-left: 65%;">
            <a onclick="pdfDownload()"  style="background-color: darkcyan;" class="btn "><i
                    class="text-muted material-icons md-post_add"></i>Download PDF</a>
            <a onclick="excelDownload()" class="btn btn-primary"><i
                    class="text-muted material-icons md-post_add"></i>Download Excel</a>
        </div>
        <h4 class="card-title">Sales Report</h4>
    
        <div class="row align-items-center">
           
            <form >
                <!-- Input field for selecting start date -->
                <label for="startDate">Start Date:</label>
                <input type="date" id="startDate">
              
                <!-- Input field for selecting end date -->
                <label for="endDate">End Date:</label>
                <input type="date" id="endDate">
                
                <button type="button" style="background-color: darkcyan;" onclick="filterOrders()">Filter</button>
              </form>
            <!-- Submit Button -->
            
            <div style="margin-left: 45%; margin-top: -35px;" class="col-md-2 col-6">
                <div class="custom_select">
                    <select id="statusSelect" onchange="getValue()" class="form-select select-nice">
                        <option  value="all">All</option>
                        <option value="day">Day</option>
                        <option value="week">Week</option>
                        <option value="month">Month</option>
                        <option value="yearly">Year</option>
                    </select>
                </div>
            </div>
            
            
        </div>
    </header>
    
    <div id="both-table">


        <div>
            <div id="card-body" class="card-body">
                <div class="table-responsive">
                    <table id="salesTable" class="table align-middle table-nowrap mb-0">
                        <thead class="table-light">
                            <tr id="headRow">
                                <th class="align-middle" scope="col">Order ID</th>
                                <th class="align-middle" scope="col">Billing Name</th>
                                <th class="align-middle" scope="col"> Order Date</th>
                                <th class="align-middle" scope="col">Delivered Date</th>
                                <th class="align-middle" scope="col">Total</th>
                                <th class="align-middle" scope="col">Coupon</th>
                                <th class="align-middle" scope="col">Discount</th>
                                <th class="align-middle" scope="col">Payment Status</th>
                                <th class="align-middle" scope="col">Payment Method</th>

                            </tr>
                        </thead>
                        <tbody id="tbody" >
                            <% latestOrders.forEach(latestOrder=> { %>
                            <tr>
                                <td><a href="#" class="fw-bold"># <%= latestOrder.orderId %></a></td>
                                <td>
                                    <%= latestOrder.userId.username %>
                                </td>
                                <td>
                                    <%= latestOrder.orderDate.toISOString().split('T')[0] %>
                                </td>
                                <td><%= latestOrder.deliveredDate.toISOString().split('T')[0] %></td>
                                <td>Rs. <%= latestOrder.billTotal %>
                                </td>
                                <td>
                                    <%= latestOrder.couponCode %>
                                </td>
                                <td>Rs. <%= latestOrder.discountPrice %>
                                </td>
                                <td><span class="badge badge-pill badge-soft-success">
                                        <%= latestOrder.status %>
                                    </span></td>
                                <td><i class="material-icons md-payment font-xxl text-muted mr-5"></i>
                                    <%= latestOrder.paymentOption %>
                                </td>

                            </tr>
                            <% }) %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="pagination-area pb-2 mx-2  mb-sm-5 mb-lg-0">
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-start">
                    <% for(let i=1; i <= totalPages && i <= 5; i++) { %>
                        <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                            <a class="page-link" href="/admin/product/SalesReport?page=<%= i %>"><%= i %></a>
                        </li>
                    <% } %>
                    <% if (currentPage < totalPages) { %>
                        <li class="page-item">
                            <a class="page-link" href="/admin/product/SalesReport?page=<%= currentPage + 1 %>">Next</a>
                        </li>
                    <% } %>
                </ul>
            </nav>
        </div>



        <div style="width: 45%; max-height: 50%; margin-bottom: 20px;" class="card mb-4">
            <header class="card-header">
                <h4 class="card-title">Total Sales Summary</h4>
            </header>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="totalTable" class="table align-middle table-nowrap mb-0">
                        <thead class="table-light">
                            <tr>
                                <th class="align-middle" scope="col">Total Delivered Price</th>
                                <th class="align-middle" scope="col">Total Sales Count</th>
                                <th class="align-middle" scope="col">Total Discount Price</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td> Rs.<%= deliveredRevenue %>
                                </td>
                                <td>
                                    <%= deliveredOrderCount %>
                                </td>
                                <td> Rs.<%= totalDiscount %>
                                </td>
                            </tr>
                            <!-- Add more rows for different periods if needed -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>






    

    <footer class="main-footer font-xs">
        <div class="row pb-30 pt-15" style="margin-top: 50px;">
            <div class="col-sm-6">
                <script>
                    document.write(new Date().getFullYear())
                </script> ShoeStrut .
            </div>
            <div class="col-sm-6">
                <div class="text-sm-end">
                    All rights reserved
                </div>
            </div>
        </div>
    </footer>
    </main>
    <script src="/asset/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/asset/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/asset/js/vendors/select2.min.js"></script>
    <script src="/asset/js/vendors/perfect-scrollbar.js"></script>
    <script src="/asset/js/vendors/jquery.fullscreen.min.js"></script>
    <script src="/asset/js/vendors/chart.js"></script>
    <!-- Main Script -->
    <script src="/asset/js/main.js" type="text/javascript"></script>
    <script src="/asset/js/custom-chart.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.2/html2pdf.bundle.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.9/xlsx.full.min.js"></script>


    </body>

    </html>


    <script>
        function pdfDownload() {
            const pdfData = document.getElementById('both-table')
            html2pdf().from(pdfData).save();
        }
    </script>


    <script>


function pdfDownload() {
        const pdfData = document.getElementById('both-table');
        html2pdf().from(pdfData).save();
    }

    function excelDownload() {
        const salesTable = document.getElementById("salesTable");
        const tableData = salesTable.querySelector("tbody");
        const salesDataArray = [];

        for (let row of tableData.rows) {
            let orderId = row.cells[0] ? row.cells[0].textContent.trim() : '';
            let billingName = row.cells[1] ? row.cells[1].textContent.trim() : '';
            let orderDate = row.cells[2] ? row.cells[2].textContent.trim() : '';
            let deliveredDate = row.cells[3] ? row.cells[3].textContent.trim() : '';
            let total = row.cells[4] ? row.cells[4].textContent.trim() : '';
            let coupon = row.cells[5] ? row.cells[5].textContent.trim() : '';
            let discount = row.cells[6] ? row.cells[6].textContent.trim() : '';
            let paymentStatus = row.cells[7] ? row.cells[7].textContent.trim() : '';
            let paymentMethod = row.cells[8] ? row.cells[8].textContent.trim() : '';

            let data = {
                orderID: orderId,
                billingName: billingName,
                orderDate: orderDate,
                deliveredDate: deliveredDate,
                total: total,
                coupon: coupon,
                discount: discount,
                paymentStatus: paymentStatus,
                paymentMethod: paymentMethod
            };

            salesDataArray.push(data);
        }

        fetch('/admin/product/excel', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ salesDataArray })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Failed to download Excel file');
            }
            return response.blob();
        })
        .then(blob => {
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'sales_report.xlsx';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        })
        .catch(error => {
            console.error('Error downloading Excel file:', error);
        });
    }

      
    </script>

<script>
    
   function filterOrders() {
    const startDate = new Date(document.getElementById("startDate").value);
    const endDate = new Date(document.getElementById("endDate").value);

    // Filter table rows based on the date range
    const rows = document.querySelectorAll("#salesTable tbody tr");
    rows.forEach(row => {
        const dateStr = row.cells[2].textContent; // Assuming date is in the 3rd cell (index 2)
        const orderDate = new Date(dateStr);
        if (orderDate < startDate || orderDate > endDate) {
            row.style.display = "none";
        } else {
            row.style.display = "";
        }
    });
}

</script>

<!-- filter day week and month  -->




    <script>
        function getValue(){
            const value = document.getElementById('statusSelect').value
            console.log("value  :",value)
    

        switch (value) {
            case 'day':
                filterByDay();
                break;
            case 'week':
                filterByWeek();
                break;
            case 'month':
                filterByMonth()
    
                break;
                case 'yearly':
                    filterByYearly()
                    break;
            default:
                showAll();
        }
    }

    function filterByDay() {
        
        const rows = document.querySelectorAll("#salesTable tbody tr");
        const today = new Date();
        const day = today.getDate();
        const month = today.getMonth() + 1;
        const year = today.getFullYear();
        const currentDate = year + '-' + (month < 10 ? '0' : '') + month + '-' + (day < 10 ? '0' : '') + day;

        rows.forEach(row => {
            const orderDate = row.cells[2].textContent.trim().split(' ')[0];
            if (orderDate !== currentDate) {
                row.style.display = "none";
            } else {
                row.style.display = "";
            }
        });
    }

    function filterByWeek() {
        
        const rows = document.querySelectorAll("#salesTable tbody tr");
        const today = new Date();
        const day = today.getDay();
        const diff = today.getDate() - day + (day === 0 ? -6 : 1);
        const startOfWeek = new Date(today.setDate(diff));
        const startDate = startOfWeek.toISOString().split('T')[0];

        rows.forEach(row => {
            const orderDate = row.cells[2].textContent.trim().split(' ')[0];
            if (orderDate < startDate) {
                row.style.display = "none";
            } else {
                row.style.display = "";
            }
        });
    }

    function filterByMonth() {
        
        const rows = document.querySelectorAll("#salesTable tbody tr");
        const today = new Date();
        const month = today.getMonth() + 1;
        const year = today.getFullYear();
        const startDate = year + '-' + (month < 10 ? '0' : '') + month + '-01';
     console.log(startDate,year,month,today)
        rows.forEach(row => {
            const orderDate = row.cells[2].textContent.trim().split(' ')[0];
            console.log(orderDate)
            if (orderDate.substring(0, 7) > startDate) {
                row.style.display = "none";
            } else {
                row.style.display = "";
            }
        });
    }


    function filterByYearly() {
    const rows = document.querySelectorAll("#salesTable tbody tr");
    const today = new Date();
    const year = today.getFullYear();
    const startDate = year + '-01-01'; // Start date of the current year
    console.log(startDate, year);

    rows.forEach(row => {
        const orderDate = row.cells[2].textContent.trim().split(' ')[0];
        const orderYear = orderDate.split('-')[0]; // Extract the year part from the order date
        console.log(orderDate, orderYear);
        if (orderYear !== year.toString()) {
            row.style.display = "none";
        } else {
            row.style.display = "";
        }
    });
}


    function showAll() {
        
        const rows = document.querySelectorAll("#salesTable tbody tr");
        rows.forEach(row => {
            row.style.display = "";
        });
    }

</script>
